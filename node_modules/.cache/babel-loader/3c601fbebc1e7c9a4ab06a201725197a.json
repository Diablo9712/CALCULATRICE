{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\react-calculator-master\\\\src\\\\components\\\\Calculator.js\";\nimport React, { useState } from \"react\";\nimport Display from \"./Display\";\nimport Buttons from \"./Buttons\";\nimport \"./styles/Calculator.css\";\nimport { evaluate, round } from \"mathjs\";\nfunction Calculator() {\n  const [input, setInput] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n\n  //input\n  const inputHandler = event => {\n    if (answer === \"Invalid Input!!\") return;\n    let val = event.target.innerText;\n    if (val === \"x2\") val = \"^2\";else if (val === \"x3\") val = \"^3\";else if (val === \"3√\") val = \"^(1÷3)\";else if (val === \"log\") val = \"log(\";\n    let str = input + val;\n    if (str.length > 14) return;\n    if (answer !== \"\") {\n      setInput(answer + val);\n      setAnswer(\"\");\n    } else setInput(str);\n    // setInput(str);\n  };\n\n  //Clear screen\n  const clearInput = () => {\n    setInput(\"\");\n    setAnswer(\"\");\n  };\n\n  // check brackets are balanced or not\n  const checkBracketBalanced = expr => {\n    let stack = [];\n    for (let i = 0; i < expr.length; i++) {\n      let x = expr[i];\n      if (x === \"(\") {\n        stack.push(x);\n        continue;\n      }\n      if (x === \")\") {\n        if (stack.length === 0) return false;else stack.pop();\n      }\n    }\n    return stack.length === 0;\n  };\n\n  // calculate final answer\n  const calculateAns = () => {\n    if (input === \"\") return;\n    let result = 0;\n    let finalexpression = input;\n    //  finalexpression = input.replaceAll(\"^\", \"**\");  //for eval()\n    finalexpression = finalexpression.replaceAll(\"x\", \"*\");\n    finalexpression = finalexpression.replaceAll(\"÷\", \"/\");\n\n    // evaluate square root\n    let noSqrt = input.match(/√[0-9]+/gi);\n    if (noSqrt !== null) {\n      let evalSqrt = input;\n      for (let i = 0; i < noSqrt.length; i++) {\n        evalSqrt = evalSqrt.replace(noSqrt[i], `sqrt(${noSqrt[i].substring(1)})`);\n      }\n      finalexpression = evalSqrt;\n    }\n    try {\n      // check brackets are balanced or not\n      if (!checkBracketBalanced(finalexpression)) {\n        const errorMessage = {\n          message: \"Brackets are not balanced!\"\n        };\n        throw errorMessage;\n      }\n      result = evaluate(finalexpression); //mathjs\n    } catch (error) {\n      result = error.message === \"Brackets are not balanced!\" ? \"Brackets are not balanced!\" : \"Invalid Input!!\"; //error.message;\n    }\n    isNaN(result) ? setAnswer(result) : setAnswer(round(result, 3));\n  };\n\n  // remove last character\n  const backspace = () => {\n    if (answer !== \"\") {\n      setInput(answer.toString().slice(0, -1));\n      setAnswer(\"\");\n    } else setInput(prev => prev.slice(0, -1));\n  };\n\n  // change prefix of expression\n  const changePlusMinus = () => {\n    //need to change for answer\n    if (answer === \"Invalid Input!!\") return;else if (answer !== \"\") {\n      let ans = answer.toString();\n      if (ans.charAt(0) === \"-\") {\n        let plus = \"+\";\n        setInput(plus.concat(ans.slice(1, ans.length)));\n      } else if (ans.charAt(0) === \"+\") {\n        let minus = \"-\";\n        setInput(minus.concat(ans.slice(1, ans.length)));\n      } else {\n        let minus = \"-\";\n        setInput(minus.concat(ans));\n      }\n      setAnswer(\"\");\n    } else {\n      if (input.charAt(0) === \"-\") {\n        let plus = \"+\";\n        setInput(prev => plus.concat(prev.slice(1, prev.length)));\n      } else if (input.charAt(0) === \"+\") {\n        let minus = \"-\";\n        setInput(prev => minus.concat(prev.slice(1, prev.length)));\n      } else {\n        let minus = \"-\";\n        setInput(prev => minus.concat(prev));\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Display, {\n    input: input,\n    setInput: setInput,\n    answer: answer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Buttons, {\n    inputHandler: inputHandler,\n    clearInput: clearInput,\n    backspace: backspace,\n    changePlusMinus: changePlusMinus,\n    calculateAns: calculateAns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }))));\n}\nexport default Calculator;","map":{"version":3,"names":["React","useState","Display","Buttons","evaluate","round","Calculator","input","setInput","answer","setAnswer","inputHandler","event","val","target","innerText","str","length","clearInput","checkBracketBalanced","expr","stack","i","x","push","pop","calculateAns","result","finalexpression","replaceAll","noSqrt","match","evalSqrt","replace","substring","errorMessage","message","error","isNaN","backspace","toString","slice","prev","changePlusMinus","ans","charAt","plus","concat","minus","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/DELL/Downloads/react-calculator-master/src/components/Calculator.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Display from \"./Display\";\nimport Buttons from \"./Buttons\";\nimport \"./styles/Calculator.css\";\nimport { evaluate, round } from \"mathjs\";\n\nfunction Calculator() {\n  const [input, setInput] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n\n  //input\n  const inputHandler = (event) => {\n    if (answer === \"Invalid Input!!\") return;\n    let val = event.target.innerText;\n\n    if (val === \"x2\") val = \"^2\";\n    else if (val === \"x3\") val = \"^3\";\n    else if (val === \"3√\") val = \"^(1÷3)\";\n    else if (val === \"log\") val = \"log(\";\n\n    let str = input + val;\n    if (str.length > 14) return;\n\n    if (answer !== \"\") {\n      setInput(answer + val);\n      setAnswer(\"\");\n    } else setInput(str);\n    // setInput(str);\n  };\n\n  //Clear screen\n  const clearInput = () => {\n    setInput(\"\");\n    setAnswer(\"\");\n  };\n\n  // check brackets are balanced or not\n  const checkBracketBalanced = (expr) => {\n    let stack = [];\n    for (let i = 0; i < expr.length; i++) {\n      let x = expr[i];\n      if (x === \"(\") {\n        stack.push(x);\n        continue;\n      }\n\n      if (x === \")\") {\n        if (stack.length === 0) return false;\n        else stack.pop();\n      }\n    }\n    return stack.length === 0;\n  };\n\n  // calculate final answer\n  const calculateAns = () => {\n    if (input === \"\") return;\n    let result = 0;\n    let finalexpression = input;\n    //  finalexpression = input.replaceAll(\"^\", \"**\");  //for eval()\n    finalexpression = finalexpression.replaceAll(\"x\", \"*\");\n    finalexpression = finalexpression.replaceAll(\"÷\", \"/\");\n\n    // evaluate square root\n    let noSqrt = input.match(/√[0-9]+/gi);\n\n    if (noSqrt !== null) {\n      let evalSqrt = input;\n      for (let i = 0; i < noSqrt.length; i++) {\n        evalSqrt = evalSqrt.replace(\n          noSqrt[i],\n          `sqrt(${noSqrt[i].substring(1)})`\n        );\n      }\n      finalexpression = evalSqrt;\n    }\n\n    try {\n      // check brackets are balanced or not\n      if (!checkBracketBalanced(finalexpression)) {\n        const errorMessage = { message: \"Brackets are not balanced!\" };\n        throw errorMessage;\n      }\n      result = evaluate(finalexpression); //mathjs\n    } catch (error) {\n      result =\n        error.message === \"Brackets are not balanced!\"\n          ? \"Brackets are not balanced!\"\n          : \"Invalid Input!!\"; //error.message;\n    }\n    isNaN(result) ? setAnswer(result) : setAnswer(round(result, 3));\n  };\n\n  // remove last character\n  const backspace = () => {\n    if (answer !== \"\") {\n      setInput(answer.toString().slice(0, -1));\n      setAnswer(\"\");\n    } else setInput((prev) => prev.slice(0, -1));\n  };\n\n  // change prefix of expression\n  const changePlusMinus = () => {\n    //need to change for answer\n    if (answer === \"Invalid Input!!\") return;\n    else if (answer !== \"\") {\n      let ans = answer.toString();\n      if (ans.charAt(0) === \"-\") {\n        let plus = \"+\";\n        setInput(plus.concat(ans.slice(1, ans.length)));\n      } else if (ans.charAt(0) === \"+\") {\n        let minus = \"-\";\n        setInput(minus.concat(ans.slice(1, ans.length)));\n      } else {\n        let minus = \"-\";\n        setInput(minus.concat(ans));\n      }\n      setAnswer(\"\");\n    } else {\n      if (input.charAt(0) === \"-\") {\n        let plus = \"+\";\n        setInput((prev) => plus.concat(prev.slice(1, prev.length)));\n      } else if (input.charAt(0) === \"+\") {\n        let minus = \"-\";\n        setInput((prev) => minus.concat(prev.slice(1, prev.length)));\n      } else {\n        let minus = \"-\";\n        setInput((prev) => minus.concat(prev));\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"main\">\n          <Display input={input} setInput={setInput} answer={answer} />\n          <Buttons\n            inputHandler={inputHandler}\n            clearInput={clearInput}\n            backspace={backspace}\n            changePlusMinus={changePlusMinus}\n            calculateAns={calculateAns}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Calculator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}